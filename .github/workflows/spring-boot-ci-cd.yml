name: IAM Spring Boot CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'integrated-banking-system/server/iam/**'
  pull_request:
    branches:
      - main
    paths:
      - 'integrated-banking-system/server/iam/**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: integrated-banking-system/server/iam
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('integrated-banking-system/server/iam/**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Test
      run: mvn test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server/iam
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('integrated-banking-system/server/iam/**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Deploy to AWS EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        scp -i private_key.pem -r -o StrictHostKeyChecking=no target/*.jar ubuntu@$HOST:/home/ubuntu/
        ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$HOST <<EOF
          sudo systemctl stop myapp
          mv /home/ubuntu/*.jar /home/ubuntu/myapp.jar
          sudo systemctl start myapp
        EOF
