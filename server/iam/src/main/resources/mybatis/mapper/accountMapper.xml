<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhsk.iam.domain.account.model.mapper.AccountMapper">
	<select id="findAllAccount" resultType="AccountVO">
		SELECT	acct_no, bank_cd, bal, ib_type, acct_dv, 
				loan_nm, acct_nick_nm, agmt_amt, pyat_amt, pyat_dt, 
				new_dt, expi_dt, repay_way, cont_rt, dpsv_dv, 
				loan_kind, cltr_ctt, int_payt_dt, curr_cd, real_amt 
		FROM account
	</select>
		
	<select id="findAvailableAccount" parameterType="int" resultType="AccountVO">
		SELECT	UA.user_no, UA.acct_no, ACCT.bank_cd, bal, ib_type, acct_dv, 
				loan_nm, acct_nick_nm, agmt_amt, pyat_amt, pyat_dt, 
				new_dt, expi_dt, repay_way, cont_rt, dpsv_dv, 
       			loan_kind, cltr_ctt, int_payt_dt, curr_cd, real_amt
		FROM	user_account UA
		INNER JOIN account ACCT
		on 		UA.acct_no = ACCT.acct_no
		WHERE 	UA.user_no = #{userNo}
		ORDER BY  acct_dv, bank_cd
	</select>	
	
	<select id="findUsersInoutPast" parameterType="InoutRequestVO" resultType="InoutVO">
		SELECT ACCT.bank_cd, UA.acct_no, trsc_dt, trsc_tm, rmrk1, inout_dv, trsc_amt, IOP.bal
		FROM inout_past IOP
			INNER JOIN account ACCT
				ON IOP.acct_no = ACCT.acct_no
			INNER JOIN user_account UA
				ON ACCT.acct_no = UA.acct_no
		WHERE UA.user_no = #{userNo} 
		<choose>
			<when test="isLoan != null and isLoan">
				AND (ACCT.acct_dv = "03")
			</when>
			<otherwise>
				AND (ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND UA.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND UA.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
			AND (IOP.trsc_dt BETWEEN #{startDt} AND #{endDt})
		<choose>
			<when test='sort != null and sort.equals("recent")'>
				ORDER BY trsc_dt DESC, trsc_tm DESC
			</when>
			<otherwise>
				ORDER BY trsc_dt ASC, trsc_tm ASC
			</otherwise>					
		</choose>
		LIMIT #{start}, #{pageSize}
	</select>	 
	
	<select id="findUsersInoutToday" parameterType="InoutRequestVO" resultType="InoutVO">
		SELECT ACCT.bank_cd, UA.acct_no, trsc_dt, trsc_tm, rmrk1, inout_dv, trsc_amt, IOP.bal
		FROM inout_past IOP
			INNER JOIN account ACCT
				ON IOP.acct_no = ACCT.acct_no
			INNER JOIN user_account UA
				ON ACCT.acct_no = UA.acct_no
		WHERE UA.user_no = #{userNo} 
		<choose>
			<when test="isLoan != null and isLoan">
				AND (ACCT.acct_dv = "03")
			</when>
			<otherwise>
				AND (ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND UA.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND UA.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
			AND (IOP.trsc_dt BETWEEN #{startDt} AND DATE_SUB(curdate(), INTERVAL 1 DAY))
		UNION
		SELECT ACCT.bank_cd, UA.acct_no, trsc_dt, trsc_tm, rmrk1, inout_dv, trsc_amt, IOT.bal
		FROM inout_today IOT
			INNER JOIN account ACCT
			    ON IOT.acct_no = ACCT.acct_no
			INNER JOIN user_account UA
				ON ACCT.acct_no = UA.acct_no
		WHERE UA.user_no = #{userNo} 
		<choose>
			<when test="isLoan != null and isLoan">
				AND (ACCT.acct_dv = "03")
			</when>
			<otherwise>
				AND (ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND UA.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND UA.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
		<choose>
			<when test='sort != null and sort.equals("recent")'>
				ORDER BY trsc_dt DESC, trsc_tm DESC
			</when>
			<otherwise>
				ORDER BY trsc_dt ASC, trsc_tm ASC
			</otherwise>					
		</choose>
		LIMIT #{start}, #{pageSize}
	</select>	 

	<select id="CountUsersInoutPast" parameterType="InoutRequestVO" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM inout_past IOP
			INNER JOIN account ACCT
				ON IOP.acct_no = ACCT.acct_no
			INNER JOIN user_account UA
				ON ACCT.acct_no = UA.acct_no
		WHERE UA.user_no = #{userNo} 
		<choose>
			<when test="isLoan != null and isLoan">
				AND (ACCT.acct_dv = "03")
			</when>
			<otherwise>
				AND (ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND UA.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND UA.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
			AND (IOP.trsc_dt BETWEEN #{startDt} AND #{endDt})
	</select>
	
	<select id="CountUsersInoutToday" parameterType="InoutRequestVO" resultType="int">
		SELECT SUM(IO.cnt)
		FROM (
			SELECT COUNT(*) AS cnt
			FROM inout_past IOP
				INNER JOIN account ACCT
					ON IOP.acct_no = ACCT.acct_no
				INNER JOIN user_account UA
					ON ACCT.acct_no = UA.acct_no
			WHERE UA.user_no = #{userNo} 
			<choose>
				<when test="isLoan != null and isLoan">
					AND (ACCT.acct_dv = "03")
				</when>
				<otherwise>
					AND (ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
				</otherwise>
			</choose>
			<if test='bankCd != null and !bankCd.equals("All")'>
				AND UA.bank_cd = #{bankCd} 
			</if>
			<if test='acctNo != null and !acctNo.equals("All")'>
				AND UA.acct_no = #{acctNo}
			</if>
			<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
				AND inout_dv = #{inoutDv}
			</if>
				AND (IOP.trsc_dt BETWEEN #{startDt} AND DATE_SUB(curdate(), INTERVAL 1 DAY))
			UNION
			SELECT COUNT(*) AS cnt
			FROM inout_today IOT
				INNER JOIN account ACCT
				    ON IOT.acct_no = ACCT.acct_no
				INNER JOIN user_account UA
					ON ACCT.acct_no = UA.acct_no
			WHERE UA.user_no = #{userNo} 
			<choose>
				<when test="isLoan != null and isLoan">
					AND (ACCT.acct_dv = "03")
				</when>
				<otherwise>
					AND (ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
				</otherwise>
			</choose>
			<if test='bankCd != null and !bankCd.equals("All")'>
				AND UA.bank_cd = #{bankCd} 
			</if>
			<if test='acctNo != null and !acctNo.equals("All")'>
				AND UA.acct_no = #{acctNo}
			</if>
			<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
				AND inout_dv = #{inoutDv}
			</if>
		) AS IO
	</select>

	<select id="findAdminsInoutPast" parameterType="InoutRequestVO" resultType="InoutVO">
		SELECT ACCT.bank_cd, ACCT.acct_no, trsc_dt, trsc_tm, rmrk1, inout_dv, trsc_amt, IOP.bal
		FROM inout_past IOP
			INNER JOIN account ACCT
			    ON IOP.acct_no = ACCT.acct_no
		WHERE 
		<choose>
			<when test="isLoan != null and isLoan">
				ACCT.acct_dv = "03"
			</when>
			<otherwise>
				(ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND ACCT.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND ACCT.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
			AND (IOP.trsc_dt BETWEEN #{startDt} AND #{endDt})
		<choose>
			<when test='sort != null and sort.equals("recent")'>
				ORDER BY trsc_dt DESC, trsc_tm DESC
			</when>
			<otherwise>
				ORDER BY trsc_dt ASC, trsc_tm ASC
			</otherwise>					
		</choose>
		LIMIT #{start}, #{pageSize}
	</select>

	<select id="findAdminsInoutToday" parameterType="InoutRequestVO" resultType="InoutVO">
		SELECT ACCT.bank_cd, ACCT.acct_no, trsc_dt, trsc_tm, rmrk1, inout_dv, trsc_amt, IOP.bal
		FROM inout_past IOP
			INNER JOIN account ACCT
			    ON IOP.acct_no = ACCT.acct_no
		WHERE 
		<choose>
			<when test="isLoan != null and isLoan">
				ACCT.acct_dv = "03"
			</when>
			<otherwise>
				(ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND ACCT.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND ACCT.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
			AND (IOP.trsc_dt BETWEEN #{startDt} AND DATE_SUB(curdate(), INTERVAL 1 DAY))
		UNION
		SELECT ACCT.bank_cd, ACCT.acct_no, trsc_dt, trsc_tm, rmrk1, inout_dv, trsc_amt, IOT.bal
		FROM inout_today IOT
			INNER JOIN account ACCT
			    ON IOT.acct_no = ACCT.acct_no
		WHERE 
		<choose>
			<when test="isLoan != null and isLoan">
				ACCT.acct_dv = "03"
			</when>
			<otherwise>
				(ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND ACCT.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND ACCT.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
		<choose>
			<when test='sort != null and sort.equals("recent")'>
				ORDER BY trsc_dt DESC, trsc_tm DESC
			</when>
			<otherwise>
				ORDER BY trsc_dt ASC, trsc_tm ASC
			</otherwise>					
		</choose>
		LIMIT #{start}, #{pageSize}	
	</select>
	
	<select id="CountAdminsInoutPast" parameterType="InoutRequestVO" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM inout_past IOP
			INNER JOIN account ACCT
			    ON IOP.acct_no = ACCT.acct_no
		WHERE 
		<choose>
			<when test="isLoan != null and isLoan">
				ACCT.acct_dv = "03"
			</when>
			<otherwise>
				(ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
			</otherwise>
		</choose>
		<if test='bankCd != null and !bankCd.equals("All")'>
			AND ACCT.bank_cd = #{bankCd} 
		</if>
		<if test='acctNo != null and !acctNo.equals("All")'>
			AND ACCT.acct_no = #{acctNo}
		</if>
		<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
			AND inout_dv = #{inoutDv}
		</if>
			AND (IOP.trsc_dt BETWEEN #{startDt} AND #{endDt})
	</select>
	
	<select id="CountAdminsInoutToday" parameterType="InoutRequestVO" resultType="int">
		SELECT SUM(IO.cnt) 
		FROM (
			SELECT COUNT(*) AS cnt
			FROM inout_past IOP
				INNER JOIN account ACCT
				    ON IOP.acct_no = ACCT.acct_no
			WHERE 
			<choose>
				<when test="isLoan != null and isLoan">
					ACCT.acct_dv = "03"
				</when>
				<otherwise>
					(ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
				</otherwise>
			</choose>
			<if test='bankCd != null and !bankCd.equals("All")'>
				AND ACCT.bank_cd = #{bankCd} 
			</if>
			<if test='acctNo != null and !acctNo.equals("All")'>
				AND ACCT.acct_no = #{acctNo}
			</if>
			<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
				AND inout_dv = #{inoutDv}
			</if>
				AND (IOP.trsc_dt BETWEEN #{startDt} AND DATE_SUB(curdate(), INTERVAL 1 DAY))
			UNION
			SELECT COUNT(*) AS cnt
			FROM inout_today IOT
				INNER JOIN account ACCT
				    ON IOT.acct_no = ACCT.acct_no
			WHERE 
			<choose>
				<when test="isLoan != null and isLoan">
					ACCT.acct_dv = "03"
				</when>
				<otherwise>
					(ACCT.acct_dv = "01" or ACCT.acct_dv = "02")
				</otherwise>
			</choose>
			<if test='bankCd != null and !bankCd.equals("All")'>
				AND ACCT.bank_cd = #{bankCd} 
			</if>
			<if test='acctNo != null and !acctNo.equals("All")'>
				AND ACCT.acct_no = #{acctNo}
			</if>
			<if test='inoutDv != null and !inoutDv.equals("All") and (inoutDv.equals("1") or inoutDv.equals("2"))'>
				AND inout_dv = #{inoutDv}
			</if>
		) AS IO
	</select>

	 <select id="checkByAcctNoToAccessibleUser" parameterType="java.util.HashMap" resultType="int">
		SELECT EXISTS (
			SELECT user_no 
			FROM user_account 
			WHERE user_no=#{userNo} 
				AND acct_no=#{acctNo}
			) 
		AS flag			 	
	 </select>

	<select id="findAllBankCodeAndBankName" resultType="java.util.HashMap">
		SELECT bank_cd, bank_nm FROM bank_code ORDER BY bank_cd ASC
	</select>

	<select id="findByBankCodeToBankName" parameterType="String" resultType="String">
		SELECT bank_nm FROM bank_code WHERE bank_cd=#{bankCd} 
	</select>
</mapper>
